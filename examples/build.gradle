//-----------------
//Examples build script
//-----------------
buildscript {
    ext.kotlinVersion = "${kotlinVersion}"

    repositories {
        mavenCentral()
        maven {
            name 'JFrog OSS snapshot repo'
            url  'https://oss.jfrog.org/oss-snapshot-local/'
        }
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

dependencies {
    implementation project(":rpgJavaInterpreter-core")
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testImplementation 'junit:junit:4.13.1'
}

task javadocJar(type: Jar) {
    archiveClassifier.set("javadoc")
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

task dspfMultithreadServerFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.dspf.multithread.ServerKt'
    }
    archiveBaseName = project.name + '-server'
    archiveVersion = ''
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task dspfMultithreadClientFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.dspf.multithread.ClientKt'
    }
    archiveBaseName = project.name + '-client'
    archiveVersion = ''
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

artifacts {
    archives javadocJar, sourcesJar
}

// deploy
publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            groupId jarikoGroupId
            artifactId 'examples'
            version jarikoVersion
        }
    }
}

signing {
    if (!project.hasProperty("signing.keyId")) {
        println "$project.name - Signing disabled because signing.keyId property is not present, it is not an error!!!"
    }
    required {  project.hasProperty("signing.keyId") }
    sign publishing.publications.mavenJava
}

java {
    withJavadocJar()
    withSourcesJar()
}